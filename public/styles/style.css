/* #region global */
* {
    border: none;
    box-sizing: border-box;
    color: inherit;
    font-family: inherit;
    word-wrap: break-word;
    padding: 0;
}

:root {
    color-scheme: light dark;

    --black-l:          rgb(000, 000, 000);
    --black-d:          rgb(010, 010, 010);
    --black:            light-dark(var(--black-l), var(--black-d));

    --white-l:          rgb(255, 255, 255);
    --white-d:          rgb(245, 245, 245);
    --white:            light-dark(var(--white-l), var(--white-d));

    --off-black-l:      rgb(016, 016, 016);
    --off-black-d:      rgb(015, 015, 015);
    --off-black:        light-dark(var(--off-black-l), var(--off-black-d));

    --off-white-l:      rgb(239, 239, 239);
    --off-white-d:      rgb(228, 228, 228);
    --off-white:        light-dark(var(--off-white-l), var(--off-white-d));

    --rustic-black-l:   rgb(025, 025, 055);
    --rustic-black-d:   rgb(015, 015, 045);
    --rustic-black:     light-dark(var(--rustic-black-l), var(--rustic-black-d));

    --rustic-white-l:   rgb(235, 235, 200);
    --rustic-white-d:   rgb(225, 225, 190);
    --rustic-white:     light-dark(var(--rustic-white-l), var(--rustic-white-d));

    --red:            rgb(155, 000, 000);

    --bright-yellow-l:  rgb(255, 255, 175);
    --bright-yellow-d:  rgb(223, 223, 143);
    --bright-yellow:    light-dark(var(--bright-yellow-l), var(--bright-yellow-d));

    --tan-l:            rgb(245, 245, 220);
    --tan-d:            rgb(163, 163, 147);
    --tan:              light-dark(var(--tan-l), var(--tan-d));

    --light-green-l:    rgb(127, 159, 155);
    --light-green-d:    rgb(064, 080, 78);
    --light-green:      light-dark(var(--light-green-l), var(--light-green-d));

    --medium-green-l:   rgb(080, 143, 145);
    --medium-green-d:   rgb(040, 072, 073);
    --medium-green:     light-dark(var(--medium-green-l), var(--medium-green-d));

    --dark-green-l:     rgb(013, 088, 097);
    --dark-green-d:     rgb(007, 044, 049);
    --dark-green:       light-dark(var(--dark-green-l), var(--dark-green-d));

    --mono: "Cousine", monospace;
    --serif: "Lora", serif;

    --space-size: clamp(10px, 7vmin, 64px);
    --space-width: var(--space-size);
    --space-height: var(--space-size);
    --space-gap: 0.33rem;
    --space-gap-h: var(--space-gap);
    --space-gap-v: var(--space-gap);
}

:root.dark {
    color-scheme: dark;
}

:root.light {
    color-scheme: light;
}

h1,
h2,
h3,
h4 {
    font-family: "Lora", serif;
    padding: 0.25em;
}

section {
    background-color: var(--off-white);
    box-shadow: 4px 0 8px var(--off-black), -4px 0 8px var(--off-black);
    border-radius: .33em;
    margin: .66em;
    padding: .33em;
}

section section {
    padding: 4px;
    margin: .33em;
    box-shadow: none;
    border: 1px solid var(--off-black);
}

p {
    margin: .33em auto;
}

dl,
ol {
    margin: 1em auto;
    width: 66%;
    width: 90%;
}

dt {
    margin-top: .66em;
}

img {
    height: auto;
    margin: 0 auto;
    max-height: 400px;
    max-width: 400px;
    width: auto;
    display: block;
}

/* #endregion global */

/* #region page */
html {
    background-color: var(--medium-green);
    color: var(--black);
    font-family: "Cousine", monospace;
}

body {
    margin: 0;
}

#content {
    margin: 0 auto;
    max-width: 900px;
}

main {
    background-color: var(--tan);
    grid-column: 1/-1;
    padding: 4px 2px;
}
/* #endregion page */

/* #region header */
header {
    background-color: var(--dark-green);
    text-align: center;
    display: grid;
    position: relative;
    grid-template-columns: auto 1fr;
    grid-template-rows: 1fr;
}

header img {
    max-width: 150px;
    max-height: 100px;
    grid-column: 1/2;
    grid-row: 1;
}

header h1, 
header h2 {
    color: var(--off-white);
    font-family: "Lora", serif;
    margin: auto 0.25em;
}

header h2 {
    grid-column: 2/3;
    grid-row: 1;
}

header h1 span {}

header div {

}

header div:hover select {
    display: block;
}

header button {
    aspect-ratio: 1;
    border-radius: 999in;
    position: absolute;
    right: .66em;
    top: .66em;
    text-align: center;
    vertical-align: middle;
    display: inline-block;
}

header button::after {
    content: 'ðŸŒ™';
}

select {
    display: none;
    grid-column: 2/3;
    grid-row: 1;
}

/* #endregion header */

/* #region nav */
nav {
    display: flex;
    justify-content: space-between;
    padding: 0 1em;
}
nav a {

}
/* #endregion nav */

/* #region main */
main>section {
}

h1 {
    display: none;
}
/* #endregion main */

/* #region footer */
footer {
    background-color: var(--dark-green);
    color: var(--off-white);
    height: 100%;
    grid-column: 1/-1;
    padding: 10px;
    text-align: center;
}
/* #endregion footer */

/* #region proposal */
.color {
    border: 1px solid;
    padding: 1em;
}

.tan {
    background-color: var(--tan);
    color: #000;
}

.dgreen {
    background-color: var(--dark-green);
    color: #fff;
}

.mgreen {
    background-color: var(--medium-green);
    color: #000;
}

.lgreen {
    background-color: var(--light-green);
    color: #000;
}

.yellow {
    background-color: var(--bright-yellow);
    color: #000;
}

.offwhite {
    background-color: var(--off-white);
    color: var(--black);
}

.offblack {
    background-color: var(--off-black);
    color: var(--white);
}

.red {
    background-color: var(--red);
    color: #fff;
}

.black {
    background-color: #000;
    color: #fff;
}

.white {
    background-color: #fff;
    color: #000;
}

.lora {
    font-family: "Lora", serif;
}

.cousine {
    font-family: "Cousine", monospace;
}
/* #endregion proposal */

#board {
    aspect-ratio: 1;
    background-color: var(--dark-green);
    box-shadow: 0 0 .25em var(--off-black);
    border-radius: 2.5em;
    color: var(--bright-yellow);
    font-family: var(--mono);
    height: calc((var(--space-height) * 9));
    margin: auto;
    width: calc((var(--space-width) * 9));
}

/* #region board */
#board table {
    border-collapse: collapse;
    height: 100%;
    width: 100%;
}

#board :where(th, td) {height: var(--space-height); width: var(--space-width);}
#board :where(thead, tfoot) :where(th, td) {height: calc(var(--space-height) * 0.5);}
#board :where(tbody th, :where(thead, tfoot) td) {width: calc(var(--space-width) * 0.5);}

tr:nth-of-type( odd) td:nth-of-type( odd) .space { --bg: var(--rustic-white); --txt: var(--black);}
tr:nth-of-type(even) td:nth-of-type(even) .space { --bg: var(--rustic-white); --txt: var(--black);}

tr:nth-of-type( odd) td:nth-of-type(even) .space { --bg: var(--rustic-black); --txt: var(--white);}
tr:nth-of-type(even) td:nth-of-type( odd) .space { --bg: var(--rustic-black); --txt: var(--white);}

#board .space {
    background-color: var(--bg);
    color: var(--txt);
    font-size: 3rem;
    height: 100%;
    margin: 0;
    padding: 0;
    position: relative;
    width: 100%;
}

#board tr:first-of-type td:first-of-type .space {border-radius: 1rem 0 0  ;}
#board tr:first-of-type td:last-of-type  .space {border-radius: 0 1rem 0 0;}
#board tr:last-of-type  td:first-of-type .space {border-radius: 0 0 0 1rem;}
#board tr:last-of-type  td:last-of-type  .space {border-radius: 0 0 1rem  ;}

#board tbody .space:hover {
    box-shadow: 0 0 .1em .1em #f00, inset 0 0 .1em .1em #f00;
    z-index: 1;
}

tbody tr:has(th:hover) {
    box-shadow: 0 0 .1em .1em #0f0, inset 0 0 .1em .1em #0f0;
    position: relative;
    z-index: 1;
}

#board :has(:where(thead, tfoot) th:nth-of-type(1):hover) :where(thead th,tfoot th, tbody td):nth-of-type(1), 
#board :has(:where(thead, tfoot) th:nth-of-type(2):hover) :where(thead th,tfoot th, tbody td):nth-of-type(2), 
#board :has(:where(thead, tfoot) th:nth-of-type(3):hover) :where(thead th,tfoot th, tbody td):nth-of-type(3), 
#board :has(:where(thead, tfoot) th:nth-of-type(4):hover) :where(thead th,tfoot th, tbody td):nth-of-type(4), 
#board :has(:where(thead, tfoot) th:nth-of-type(5):hover) :where(thead th,tfoot th, tbody td):nth-of-type(5), 
#board :has(:where(thead, tfoot) th:nth-of-type(6):hover) :where(thead th,tfoot th, tbody td):nth-of-type(6), 
#board :has(:where(thead, tfoot) th:nth-of-type(7):hover) :where(thead th,tfoot th, tbody td):nth-of-type(7), 
#board :has(:where(thead, tfoot) th:nth-of-type(8):hover) :where(thead th,tfoot th, tbody td):nth-of-type(8) {
    box-shadow: 0 0 .1em .1em #f0f, inset 0 0 .1em .1em #f0f;
    z-index: 1;
}

.space::after {
    align-items: center;
    aspect-ratio: 1;
    background-color: var(--disc);
    border-radius: 999in;
    border: 6px double var(--rim);
    color: var(--symbolColor);
    content: attr(data-symbol);
    display: flex;
    height: 66.66%;
    justify-content: center;
    left: 50%;
    text-shadow:
         1px  1px 8px var(--symbolAura),
         1px -1px 8px var(--symbolAura),
        -1px -1px 8px var(--symbolAura),
        -1px  1px 8px var(--symbolAura);
    top: 50%;
    translate: -50% -50%;
    position: absolute;
    width: 66.66%;
    z-index: 10;
}

.space[data-color=black]::after {
    --disc:        var(--off-black);
    --rim:         var(--white);
    --symbolColor: var(--white);
    --symbolAura:  var(--black);
}

.space[data-color=white]::after {
    --disc:        var(--off-white);
    --rim:         var(--black);
    --symbolColor: var(--black);
    --symbolAura:  var(--white);
}

#board .space.selected {
    background-color: color-mix(in hsl, var(--bg), #070 33%);
}


#board .space.visited {
    background-color: color-mix(in hsl, var(--bg), #00f 10%);
}

#board .space.validMove {
    background-color: color-mix(in hsl, var(--bg), #ff7 40%);
}

#board .space.visited.validMove {
    background-color: color-mix(in hsl, var(--bg), #700 33%);
}

.space:where(.visited,.validMove,.selected)::before {
    content: attr(data-space) '\A' attr(data-y) attr(data-x);
    z-index: 999;
    position: absolute;
    background-color: #777;
    border-radius: 9in;
    left: 50%;
    top: 50%;
    font-size: 50%;
    translate: -50% -50%;
    opacity: .5;
}

/* #endregion board */

section#history {
}

/* #region history */
#history h2 {
    font-size: 1.125em;
}
/* #endregion history */

section#analysis {
}

/* #region analysis */

/* #endregion analysis */

@media screen and (min-width: 500px) {
    main>section {
        display: grid;
        grid-template-columns: 1fr auto;
        grid-template-rows: auto 1fr auto;
    }

    h1 {
        display: block;
        font-size: 1.5em;
        grid-column: 2/3;
        margin: 0 1.5em 0 0;
        text-align: right;
    }

    #board {
        grid-column: 1/2;
        grid-row: 1/3;
    }

    #analysis {
        grid-column: 1/-1;
    }

    #history {
        grid-column: 2/3;
        grid-row: 2/3;
    }
}
